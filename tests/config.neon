decorator:
	Psr\Log\LoggerAwareInterface:
		setup:
			- setLogger

doctrine:
	user: 'foo'
	password: ''
	dbname: 'bar'

extensions:
	console: Kdyby\Console\DI\ConsoleExtension
	events: Kdyby\Events\DI\EventsExtension
	annotations: Kdyby\Annotations\DI\AnnotationsExtension
	doctrine: Kdyby\Doctrine\DI\OrmExtension
	oauth2: Lookyman\NetteOAuth2Server\Storage\Doctrine\NetteOAuth2ServerDoctrineExtension

oauth2:
	grants:
		authCode: [pkce: on]
		clientCredentials: [ttl: PT2H]
		implicit: on
		password: on
		refreshToken: on
	privateKey:
		keyPath: %appDir%/keys/private.key
		passPhrase: foobar
	publicKey: %appDir%/keys/public.key
	approveDestination: :Foo:bar
	loginDestination: :Bar:foo
	tablePrefix: test_
	loginEventPriority: 1

services:
	- Lookyman\NetteOAuth2Server\Storage\Doctrine\Tests\Mock\LoggerMock
	custom: Lookyman\NetteOAuth2Server\Storage\Doctrine\Tests\Mock\CustomGrantMock
	oauth2.authorizationServer:
		setup:
			- enableGrantType(@custom)
